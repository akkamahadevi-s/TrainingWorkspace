package com.training.exilant.restfulworks.user;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
import org.springframework.web.util.UriComponentsBuilder;

import com.training.exilant.restfulworks.execption.UserNotFoundException;

//users-give users-GET


@RestController
public class UserResource {
	@Autowired
	private UserDAOService userService;
	
	@GetMapping("/users")
	public List<User> getAllUsers(){
		return userService.getAllUsers();
	}
	
	@GetMapping("/users/{userId}")
	public User getOneUser(@PathVariable int userId) {
		User  getUser=userService.getUser(userId);
		
		if(getUser==null) {
			throw new UserNotFoundException();
		}
		return getUser;
		
	}
	
	@PostMapping("/users")
	public void createUser(@RequestBody User user) {
		User savedUser = userService.saveUser(user);
		System.out.println("Saved User"+savedUser);
	}
	
	@PostMapping("/usersv2")
	public ResponseEntity<Object> createUserResponseCode(@RequestBody User user) {
		User savedUser = userService.saveUser(user);
		URI location = ServletUriComponentsBuilder.fromCurrentRequest().
				path("{/userId}").buildAndExpand(savedUser.getUserId()).toUri();
		return ResponseEntity.created(location).build();
		
	}
	

}
